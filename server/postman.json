{
	"info": {
		"_postman_id": "revquiz-docs-2025",
		"name": "RevQuiz API (Documented)",
		"description": "Comprehensive documentation for the RevQuiz API. Includes authentication, faculties, courses, quizzes, questions, and user profile endpoints. All protected endpoints require a Bearer JWT token in the Authorization header.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:5000"
		},
		{
			"key": "token",
			"value": ""
		}
	],
	"item": [
		{
			"name": "Auth",
			"description": "User authentication endpoints for sign up and login.",
			"item": [
				{
					"name": "Sign Up",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"user1@example.com\",\n  \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/signup",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"signup"
							]
						}
					},
					"response": [
						{
							"name": "201 Created",
							"originalRequest": {},
							"status": "Created",
							"code": 201,
							"body": "{\n  \"status\": \"OK\",\n  \"message\": \"User registered successfully\",\n  \"data\": {\n    \"userId\": \"...\",\n    \"token\": \"...\"\n  }\n}"
						}
					],
					"description": "Register a new user. Returns a JWT token on success."
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"user1@example.com\",\n  \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"auth",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {},
							"status": "OK",
							"code": 200,
							"body": "{\n  \"status\": \"OK\",\n  \"message\": \"User logged in successfully\",\n  \"data\": {\n    \"userId\": \"...\",\n    \"token\": \"...\"\n  }\n}"
						}
					],
					"description": "Login with email and password. Returns a JWT token on success."
				}
			]
		},
		{
			"name": "Users",
			"description": "User profile and management endpoints.",
			"item": [
				{
					"name": "Get Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/users/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"users",
								"me"
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {},
							"status": "OK",
							"code": 200,
							"body": "{\n  \"status\": \"OK\",\n  \"message\": \"User profile fetched successfully\",\n  \"data\": {\n    \"_id\": \"...\",\n    \"email\": \"user1@example.com\",\n    \"score\": {\n      \"quizzes\": { \"passed\": { \"count\": 0, \"quizzes\": [] }, \"failed\": { \"count\": 0, \"quizzes\": [] } },\n      \"questions\": { \"passed\": { \"count\": 0, \"questions\": [] }, \"failed\": { \"count\": 0, \"questions\": [] } }\n    }\n  }\n}"
						}
					],
					"description": "Get the authenticated user's profile. Requires a valid JWT token."
				}
			]
		},
		{
			"name": "Faculties",
			"description": "Endpoints for managing faculties.",
			"item": [
				{
					"name": "Get All Faculties",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/faculties",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"faculties"
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {},
							"status": "OK",
							"code": 200,
							"body": "{\n  \"status\": \"OK\",\n  \"message\": \"documents found\",\n  \"data\": {\n    \"data\": [ { \"_id\": \"...\", \"name\": \"...\" } ],\n    \"pagination\": { \"currentPage\": 1, \"limit\": 20, \"totalPages\": 1, \"totalResults\": 3 }\n  }\n}"
						}
					],
					"description": "Get a list of all faculties."
				},
				{
					"name": "Create Faculty",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Faculty of Science\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/faculties",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"faculties"
							]
						}
					},
					"response": [],
					"description": "Create a new faculty."
				},
				{
					"name": "Get Faculty By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/faculties/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"faculties",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "FACULTY_ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"status": "OK",
							"code": 200,
							"body": "{\n  \"status\": \"OK\",\n  \"message\": \"Faculty found\",\n  \"data\": { \"_id\": \"...\", \"name\": \"...\" }\n}"
						},
						{
							"name": "404 Not Found",
							"status": "Not Found",
							"code": 404,
							"body": "{\n  \"status\": \"fail\",\n  \"message\": \"Faculty not found\"\n}"
						}
					],
					"description": "Get a faculty by its ID."
				},
				{
					"name": "Update Faculty",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated Faculty Name\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/faculties/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"faculties",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "FACULTY_ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"status": "OK",
							"code": 200,
							"body": "{\n  \"status\": \"OK\",\n  \"message\": \"Faculty updated\",\n  \"data\": { \"_id\": \"...\", \"name\": \"Updated Faculty Name\" }\n}"
						},
						{
							"name": "404 Not Found",
							"status": "Not Found",
							"code": 404,
							"body": "{\n  \"status\": \"fail\",\n  \"message\": \"Faculty not found\"\n}"
						}
					],
					"description": "Update a faculty by its ID."
				},
				{
					"name": "Delete Faculty",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_url}}/faculties/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"faculties",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "FACULTY_ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"status": "OK",
							"code": 200,
							"body": "{\n  \"status\": \"OK\",\n  \"message\": \"Faculty deleted\"\n}"
						},
						{
							"name": "404 Not Found",
							"status": "Not Found",
							"code": 404,
							"body": "{\n  \"status\": \"fail\",\n  \"message\": \"Faculty not found\"\n}"
						}
					],
					"description": "Delete a faculty by its ID."
				}
			]
		},
		{
			"name": "Courses",
			"description": "Endpoints for managing courses.",
			"item": [
				{
					"name": "Get All Courses",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/courses?faculty=FACULTY_ID",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"courses"
							],
							"query": [
								{
									"key": "faculty",
									"value": "FACULTY_ID",
									"description": "Filter by faculty ID (optional)"
								}
							]
						}
					},
					"response": [],
					"description": "Get all courses. Optionally filter by faculty using query params."
				},
				{
					"name": "Get All Courses (Full Features)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/courses?faculty=FACULTY_ID&sort=-name,createdAt&fields=name,faculty,createdAt&keywords=engineering&page=2&limit=5&populate=faculty&price[gte]=100&price[lte]=500",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"courses"
							],
							"query": [
								{
									"key": "faculty",
									"value": "FACULTY_ID",
									"description": "Filter by faculty ID"
								},
								{
									"key": "sort",
									"value": "-name,createdAt",
									"description": "Sort by name desc, createdAt asc"
								},
								{
									"key": "fields",
									"value": "name,faculty,createdAt",
									"description": "Select fields"
								},
								{
									"key": "keywords",
									"value": "engineering",
									"description": "Search in title/description"
								},
								{
									"key": "page",
									"value": "2",
									"description": "Page number"
								},
								{
									"key": "limit",
									"value": "5",
									"description": "Results per page"
								},
								{
									"key": "populate",
									"value": "faculty",
									"description": "Populate faculty field"
								},
								{
									"key": "price[gte]",
									"value": "100",
									"description": "Price >= 100"
								},
								{
									"key": "price[lte]",
									"value": "500",
									"description": "Price <= 500"
								}
							]
						}
					},
					"response": [],
					"description": "Get all courses with all advanced query features."
				},
				{
					"name": "Create Course",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Mathematics\",\n  \"faculty\": \"FACULTY_ID\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/courses",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"courses"
							]
						}
					},
					"response": [],
					"description": "Create a new course. Requires faculty ID."
				}
			]
		},
		{
			"name": "Quizzes",
			"description": "Endpoints for managing quizzes.",
			"item": [
				{
					"name": "Get All Quizzes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/quizzes?course=COURSE_ID",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"quizzes"
							],
							"query": [
								{
									"key": "course",
									"value": "COURSE_ID",
									"description": "Filter by course ID (optional)"
								}
							]
						}
					},
					"response": [],
					"description": "Get all quizzes. Optionally filter by course using query params."
				},
				{
					"name": "Create Quiz",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Quiz 1\",\n  \"course\": \"COURSE_ID\",\n  \"difficulty\": \"easy\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/quizzes",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"quizzes"
							]
						}
					},
					"response": [],
					"description": "Create a new quiz. Requires course ID and difficulty."
				}
			]
		},
		{
			"name": "Questions",
			"description": "Endpoints for managing and solving questions.",
			"item": [
				{
					"name": "Get All Questions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/questions?quiz=QUIZ_ID",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"questions"
							],
							"query": [
								{
									"key": "quiz",
									"value": "QUIZ_ID",
									"description": "Filter by quiz ID (optional)"
								}
							]
						}
					},
					"response": [],
					"description": "Get all questions. Optionally filter by quiz using query params."
				},
				{
					"name": "Solve Question",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"answer\": \"your_answer_here\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/questions/:id/solve",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"questions",
								":id",
								"solve"
							],
							"variable": [
								{
									"key": "id",
									"value": "QUESTION_ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {},
							"status": "OK",
							"code": 200,
							"body": "{\n  \"status\": \"OK\",\n  \"message\": \"Question solved successfully\",\n  \"data\": {\n    \"isCorrect\": true,\n    \"question\": \"...\",\n    \"answer\": \"...\"\n  }\n}"
						}
					],
					"description": "Solve a single question. Requires authentication."
				},
				{
					"name": "Solve All Questions in a Quiz",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"answers\": [\n    { \"questionId\": \"QUESTION_ID_1\", \"answer\": \"answer1\" },\n    { \"questionId\": \"QUESTION_ID_2\", \"answer\": \"answer2\" }\n  ]\n}"
						},
						"url": {
							"raw": "{{base_url}}/questions/quiz/:quizId/solve",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"questions",
								"quiz",
								":quizId",
								"solve"
							],
							"variable": [
								{
									"key": "quizId",
									"value": "QUIZ_ID"
								}
							]
						}
					},
					"response": [
						{
							"name": "200 OK",
							"originalRequest": {},
							"status": "OK",
							"code": 200,
							"body": "{\n  \"status\": \"OK\",\n  \"message\": \"Quiz solved successfully\",\n  \"data\": {\n    \"totalQuestions\": 5,\n    \"correctAnswers\": 3,\n    \"percentage\": 60,\n    \"results\": [\n      {\n        \"questionId\": \"...\",\n        \"question\": \"...\",\n        \"isCorrect\": true,\n        \"userAnswer\": \"...\",\n        \"correctAnswer\": \"...\"\n      }\n    ]\n  }\n}"
						}
					],
					"description": "Solve all questions in a quiz at once. Requires authentication. Returns detailed results and score."
				}
			]
		}
	]
}